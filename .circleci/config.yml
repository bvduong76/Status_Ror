version: 2
jobs:
  rspec:
    parallelism: 4
    docker:
      - image: circleci/ruby:2.5.1-node-browsers
        environment:
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
          PGHOST: 127.0.0.1
          PGUSER: circleci-demo-ruby
          RAILS_ENV: test
          DATABASE_URL: postgres://circleci:@localhost:5432/movielish_test
          BASE_URL: 'http://localhost:3000'
      - image: circleci/postgres:9.5-alpine
        environment:
          POSTGRES_USER: circleci
          POSTGRES_DB: movielish_test
          POSTGRES_PASSWORD: ""
      - image: redis
    steps:
      - checkout
      # Restore bundle cache
      - restore_cache:
          keys:
            - rails-demo-bundle-v3-{{ checksum "Gemfile.lock" }}
            - rails-demo-bundle-v3-{{ .Environment.cacheVersion }}

      - run:
          name: Bundle Install
          command: bundle check || bundle install

      # Store bundle cache
      - save_cache:
          key: rails-demo-bundle-v3-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      - run:
          name: Update npm
          command: 'sudo npm install -g npm@latest'

      - restore_cache:
          key: dependency-cache-v3-{{ checksum "package.json" }}

      - run:
          name: Install npm
          command: npm install

      - save_cache:
          key: dependency-cache-v3-{{ checksum "package.json" }}
          paths:
            - node_modules

      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run:
          name: Database setup
          command: |
            bundle exec rake db:create db:schema:load --trace
            bundle exec rake db:migrate
      - type: shell
        command: |
          RAILS_ENV=test bundle exec rspec --profile 10 \
                            --format RspecJunitFormatter \
                            --out test_results/rspec.xml \
                            --format progress \
                            $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)
      # Save test results for timing analysis
      - store_test_results:
          path: test_results

  cucumber:
    parallelism: 4
    docker:
      - image: circleci/ruby:2.5.1-node-browsers
        environment:
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
          PGHOST: 127.0.0.1
          PGUSER: circleci-demo-ruby
          RAILS_ENV: test
          DATABASE_URL: postgres://circleci:@localhost:5432/movielish_test
          BASE_URL: 'http://localhost:3000'
      - image: circleci/postgres:9.5-alpine
        environment:
          POSTGRES_USER: circleci
          POSTGRES_DB: movielish_test
          POSTGRES_PASSWORD: ""
      - image: redis
    steps:
      - checkout
      # Restore bundle cache
      - restore_cache:
          keys:
            - rails-demo-bundle-v3-{{ checksum "Gemfile.lock" }}
            - rails-demo-bundle-v3-{{ .Environment.cacheVersion }}

      - run:
          name: Bundle Install
          command: bundle check || bundle install

      # Store bundle cache
      - save_cache:
          key: rails-demo-bundle-v3-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      - run:
          name: Update npm
          command: 'sudo npm install -g npm@latest'

      - restore_cache:
          key: dependency-cache-v3-{{ checksum "package.json" }}

      - run:
          name: Install npm
          command: npm install

      - save_cache:
          key: dependency-cache-v3-{{ checksum "package.json" }}
          paths:
            - node_modules

      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run:
          name: Database setup
          command: |
            bundle exec rake db:create db:schema:load --trace
            bundle exec rake db:migrate
      # Run Cucumber in parallel
      - type: shell
        command: |
          #bundle exec cucumber "features/"
          RAILS_ENV=test bundle exec cucumber \
                            $(circleci tests glob "features/**/*.feature" | circleci tests split --split-by=timings)
      # Save test results for timing analysis
      - store_test_results:
          path: test_results

workflows:
  version: 2
  build_and_test:
    jobs:
      - rspec
      - cucumber